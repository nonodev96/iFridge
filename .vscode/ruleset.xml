<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="MyFantasticStandard">
    <description>Created with the PHP Coding Standard Generator. http://edorian.github.com/php-coding-standard-generator/
    </description>
    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.Commenting.Todo"/>
    <rule ref="Generic.Commenting.Fixme"/>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Debug.ClosureLinter"/>
    <rule ref="Generic.Debug.JSHint"/>
    <rule ref="Generic.Debug.CSSLint"/>
    <rule ref="Generic.Files.ByteOrderMark"/>
<!--    <rule ref="Generic.Files.LineLength">-->
<!--        <properties>-->
<!--            <property name="lineLimit" value="120"/>-->
<!--        </properties>-->
<!--    </rule>-->
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Formatting.MultipleStatementAlignment"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>
    <rule ref="Generic.Metrics.CyclomaticComplexity"/>
    <rule ref="Generic.Metrics.NestingLevel"/>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <rule ref="Generic.PHP.UpperCaseConstant"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent"/>
    <rule ref="MySource.PHP.GetRequestData"/>
    <rule ref="MySource.PHP.ReturnFunctionValue"/>
    <rule ref="PEAR.Commenting.InlineComment"/>
    <rule ref="PEAR.ControlStructures.MultiLineCondition"/>
    <rule ref="PEAR.Formatting.MultiLineAssignment"/>
    <rule ref="PEAR.Functions.FunctionCallSignature"/>
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="PEAR.NamingConventions.ValidClassName"/>
    <rule ref="PEAR.NamingConventions.ValidFunctionName"/>
    <rule ref="PEAR.NamingConventions.ValidVariableName"/>
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>
    <rule ref="PEAR.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
<!--    <rule ref="Squiz.PHP.ForbiddenFunctions"/>-->
    <rule ref="Squiz.PHP.GlobalKeyword"/>
    <rule ref="Squiz.PHP.InnerFunctions"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.PropertyLabelSpacing"/>
    <rule ref="Squiz.Arrays.ArrayDeclaration">
        <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNotAligned" />
<!--        <exclude name="Squiz.Arrays.ArrayDeclaration.KeyNotAligned" />-->
        <exclude name="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned" />
<!--        <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNotAligned" />-->
        <exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned" />
<!--        <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNoNewline" />-->
        <exclude name="Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed" />
        <exclude name="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed" />
    </rule>
    <!-- Disable some error messages that we do not want. -->
    <!--
        <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned">
            <severity>0</severity>
        </rule>
        <rule ref="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned">
            <severity>0</severity>
        </rule>
        <rule ref="Squiz.Arrays.ArrayDeclaration.FirstValueNoNewline">
            <severity>0</severity>
        </rule>
        <rule ref="Squiz.Arrays.ArrayDeclaration.KeyNotAligned">
            <severity>0</severity>
        </rule>
        <rule ref="Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed">
            <severity>0</severity>
        </rule>
        <rule ref="Squiz.Arrays.ArrayDeclaration.NoComma">
            <severity>0</severity>
        </rule>
        <rule ref="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast">
            <severity>0</severity>
        </rule>
        <rule ref="Squiz.Arrays.ArrayDeclaration.NotLowerCase">
            <severity>0</severity>
        </rule>
        <rule ref="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed">
            <severity>0</severity>
        </rule>
        <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNotAligned">
            <severity>0</severity>
        </rule>
        <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNoNewline">
            <severity>0</severity>
        </rule>
    -->
    <rule ref="Zend.NamingConventions.ValidVariableName"/>
    <!--  Allow = by echo  -->
    <rule ref="Generic.PHP.DisallowShortOpenTag.EchoFound">
        <severity>0</severity>
    </rule>
</ruleset>